@page "/task-list/{id:int}/confirm-risks-issues"
@using ApplyToBecomeInternal.ViewModels
@model ApplyToBecomeInternal.Pages.UpdateAcademyConversionProjectPageModel
@{
	ViewData["Title"] = "Confirm risks and issues";
}

@section BeforeMain
{
	<a back-link-for="@Links.TaskList.Index"></a>
}

@if (Model.ShowError)
{
	<partial name="_ErrorSummary" />
}

<div class="govuk-grid-row">
	<div class="govuk-grid-column-full">
		<span class="govuk-caption-l">@Model.Project.SchoolName</span>
		<h1 class="govuk-heading-l">
			Confirm risks and issues
		</h1>
		<dl class="govuk-summary-list">
			@await Html.PartialAsync("_SummaryListRow", new SummaryListRowViewModel(
				"risks-and-issues",
				"Risks and issues",
				Model.Project.RisksAndIssues,
				Links.RisksAndIssuesSection.RisksAndIssues.Page,
				Model.Project.Id,
				"risks and issues"))
			@await Html.PartialAsync("_SummaryListRow", new SummaryListRowViewModel(
				"equalities-impact-assessment-considered",
				"Has an Equalities Impact Assessment been considered?",
				Model.Project.EqualitiesImpactAssessmentConsidered))
		</dl>
		<form method="post">
			<div class="govuk-form-group">
				@await Html.PartialAsync("_CheckboxInput", new CheckboxInputViewModel(
					"risks-and-issues-complete",
					"risks-and-issues-complete",
					Model.Project.RisksAndIssuesSectionComplete,
					"Mark this section as complete, you can still make changes later"))
			</div>

			<input name="SuccessPage" type="hidden" value="@Links.TaskList.Index.Page" />
			<button class="govuk-button" data-module="govuk-button">
				Confirm and continue
			</button>
		</form>
	</div>
</div>
